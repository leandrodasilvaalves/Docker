sudo su -   terminal como root

apt-get install net-tools   - instala as ferramentas netstat

curl -sSL https://get.docker.com | sh	- instalar docker

/etc/init.d/docker start	- iniciar o docker

ps -ef | grep docker	- ver se o docker está rodando

docker ps - listar containers rodando

docker images	- listar imagens baixadas

docker run -i -t ubuntu:14.10 /bin/bash - criar container utilizando ubuntu, inciando o processo "/bin/bash". Se a imagem não existir na máquina local ele irá baixar direto do repositório do docker.

uname -a 	-  mostra dados do linux, no caso, dados do container

cat /etc/issue	- para mostrar que está realmente no ubuntu (container)

apt-get update	 - baixar atualizações

ps -ef	- mostra processos executados pelo container

Ctrl+p+q 	- sair do container, mas deixando-o ativo

docker attach containerId - volta para o container selecionado

docker diff containerId - ver as alterações (arquivos criados, modificados, deletados) realizadas no container

Ctrl+d	- faz logout e mata a instância do container

docker run -i -t -p 8080:80 ubuntu:14.10 /bin/bash	- criar um container a partir da imagem baixada anteriormente

apt-get install nginx	- instalar webserver no container

/etc/init.d/nginx start	- iniciar o nginx

netstat -atunp	- mostra portas escutando no container

docker commit containerId nomedaImagem(badtux/nginx-ubuntu:1.0) é importante passar a versão para que o docker organize os meu containers conforme o modificações e novos commits

docker run -i -t -p 6660:80 nomedaimagem(badtux/nginx-ubuntu:1.0) /bin/bash

tail -f /var/log/nginx/access.log	- mostra os logs de acesso do nginx

docker stop containerId	- finalizar um container

docker inspect containerId - dá pra ver uma lista de processos do container em formato json

docker container run -d --name ex-daemon-basic -p 8080:80 -v $(pwd)/html:/usr/share/nginx/html nginx    - rodar container em background mapeando para uma pasta do host

docker stats containerId - ver processos como consumo de cpu e memória

docker exec containerId comando (ps -ef) - para executar um comando dentro do container

apt-get update
apt-get install iputils-ping -  instalar ping

+-------------------------------------------------------------------------------------+
EXEMPLO BASICO DE dockerfile
+-------------------------------------------------------------------------------------+
FROM nginx-ubuntu:1.0
MAINTAINER leandro.silva.alves@gmail.com
RUN apt-get update && apt-get install -y apache2 && apt-get clean
+-------------------------------------------------------------------------------------+

docker build -t apache-nginx-ubuntu:1.0 .   - criar imagem a partir do dockerfile, lembrando que o só pode haver um dockerfile por diretório.

docker rm `docker ps -a -q`	    - o camando entre aspas lista somente a primeira coluna de todos os container. Em conjunto com 'docker rm' esse comando remove todos os containers.

free -m - quantidade de memória do host (não funcionou no mint)

docker run -ti -m 512M debian /bin/bash     - criar container limitando o uso de memória

docker inspect containerId | grep -i mem   - verificar o uso de memoria do container

docker update -m 256M containerId   - atualizar o limite de memoria de um container em excecução.

docker run -ti --cpu-shares 512 debian /bin/bash    - limitar o uso do cpu. No exemplo do video ele criou 3 containers, sendo o primeiro com 1024 e os demais com 512. O primeiro pode acessar até 50% do cpu e os outros podem acessar até 25% do cpu

docker inspect containerId | grep -i cpu   - verificar o uso do cpu.

docker update --cpu-shares 512 containerId  - atualizar o limite de cpu de um container em excecução.

docker image build --build-arg S3_BUCKET=myapp -t ex-build-arg .     - fazer build de uma imagem a partir do Dockerfile e passando parâmetros

docker container run ex-build-arg bash -c 'echo $S3_BUCKET'     - criar container a partir de imagem com argumentos.

docker image inspect --format="{{index .Config.Labels \"maintainer\"}}" ex-build-arg    - filtrar inspect






















































